# 식량창고를 약탈해야한다.
# 그런데 들키지 않으려고 최소 한칸 이상 띄어서 약탈해야한다.
# 최대로 빼앗을 수 있는 식량의 갯수 구하기

# N 식량 창고의 개수 (3<=N<=100)
# K 각 창고에 저장된 식량의 개수


# 효율적이지 않았다. 매 순간마다 초기화를 시켰다. 그리고 모든 경우의 수를 전부 계산했다.
# 이렇게 하면 4개의 경우에는 답이 나오지만 그 이상의 경우에는 장담할 수가 없다.
def war(N, K):
    d = [0]*(N+1)
    for i in range(1, N+1):
        d[i] = K[i-1]
        for j in range(i+1, len(K)):
            d[i] = max(d[i], K[j]+d[i])
    return max(d)

# 예시 답안


# 피보나치 수열과 비슷하지만 다르다.
def war2(N, K):
    d = [0]*(N+1)
    d[1] = K[0]
    d[2] = max(K[0], K[1])
    for i in range(3, N+1):
        d[i] = max(d[i-1], d[i-2] + K[i-1])
    return d[N]


print(war(4, [1, 3, 1, 5]))
